---
# Must check fips state here as pulp-fips could have
- name: Check fips state
  shell: cat /proc/sys/crypto/fips_enabled
  register: fips_state

- name: Set the repo_priority based on fips_state 
  set_fact:
    repo_priority: "{{  fips_priority if fips_state.stdout == '1'  else default_priority }}"

# Pulp 2 requires Python 2.
- name: Install Python 2 (Fedora)
  package:
    name: python
    state: present
  when: ansible_distribution == "Fedora"

- block:

  - name: Open firewall ports (iptables)
    iptables:
      action: insert
      chain: INPUT
      ctstate: NEW
      protocol: "{{ item.protocol }}"
      destination_port: "{{ item.port }}"
      jump: ACCEPT
    loop:
      - port: 'http'
        protocol: 'tcp'
      - port: 'https'
        protocol: 'tcp'
      - port: 'amqps'
        protocol: 'tcp'
      - port: 'amqp'
        protocol: 'tcp'
    notify: Save IPv4 iptables configuration

  - name: Install required packages for RHEL
    package:
      name:
        - attr
        - libselinux-python
        - policycoreutils-python
      state: present

  - name: Setup qpid custom repo
    get_url:
      url: https://copr.fedorainfracloud.org/coprs/g/qpid/qpid/repo/epel-6/irina-qpid-epel-6.repo
      dest: /etc/yum.repos.d/copr-qpid.repo

  - name: Allow Apache to listen on tcp port 5000
    seport:
      ports: 5000
      proto: tcp
      setype: http_port_t
      state: present

  when:
    - ansible_distribution == "RedHat"
    - ansible_distribution_major_version|int == 6

- block:

  - name: Install firewalld and python bindings
    package:
      name:
        - firewalld
        - "python{{ ansible_python.version.major }}-firewall"
      state: present

  - name: Start and enable firewalld
    service:
      name: firewalld
      state: started
      enabled: true

  - name: Open firewall ports (firewalld)
    firewalld:
      port: "{{ item }}"
      state: enabled
      permanent: true
      immediate: true
    loop:
      # As of this writing, firewalld knows about a miniscule number of
      # services out of the box. `firewall-cmd --get-services | wc -w`
      # returns "103", and the list of services doesn't include amqp or amqps,
      # among many others. Thus, we have to explicitly write out
      # port/transport pairs here.
      - "80/tcp"     # http
      - "443/tcp"    # https
      - "27017/tcp"  # mongo
      - "5671/tcp"   # amqps
      - "5672/tcp"   # amqp

  when: not (ansible_distribution == "RedHat" and ansible_distribution_major_version|int == 6)

- name: Add MongoDB3.4 repo
  yum_repository:
    name: mongo34
    description: mongo34 repo
    file: mongodb34
    baseurl: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/
    enabled: yes
    gpgcheck: yes
    gpgkey: https://www.mongodb.org/static/pgp/server-3.4.asc

- name: Install MongoDB server
  package:
    name:
      - mongodb-org
      - mongodb-org-server
    state: present

- name: Start and enable MongoDB server service
  service:
    name: mongod
    state: started
    enabled: true

- name: Install qpid-cpp server
  package:
    name:
      - qpid-cpp-server
      - qpid-cpp-server-linearstore
    state: present

- name: Install python-saslwrapper
  package:
    name: python-saslwrapper
    state: present
  when: ansible_os_family == "RedHat"

- name: Start and enable qpid-cpp server service
  service:
    name: qpidd
    state: started
    enabled: true

- name: Setup Pulp nightly repository
  template:
    src: yum_repo.j2
    dest: /etc/yum.repos.d/{{ item.key }}.repo
  with_dict:
    pulp:
      name: Pulp Project repository
      baseurl: "https://repos.fedorapeople.org/pulp/pulp/testing/automation/{{ pulp_version }}/stage/{% if ansible_distribution == 'Fedora' %}fedora-{% endif %}$releasever/$basearch/"
      gpgcheck: 0
      priority: "{{ repo_priority }}"
  when: pulp_build == "nightly"

- name: Setup Pulp nightly koji repository
  template:
    src: yum_repo.j2
    dest: /etc/yum.repos.d/{{ item.key }}.repo
  with_dict:
    pulp:
      name: Pulp Project repository
      baseurl: "http://koji.katello.org/releases/yum/pulp-nightly/pulp/{% if ansible_distribution == 'Fedora' %}fedora-{% endif %}$releasever/$basearch/"
      gpgcheck: 0
      priority: "{{ repo_priority }}"
  when: pulp_build == "nightly_koji"

- name: Setup Pulp beta or stable repository
  template:
    src: yum_repo.j2
    dest: /etc/yum.repos.d/{{ item.key }}.repo
  with_dict:
    pulp:
      name: Pulp Project repository
      baseurl: "https://repos.fedorapeople.org/pulp/pulp/{{ pulp_build }}/{{ pulp_version }}/{% if ansible_distribution == 'Fedora' %}fedora-{% endif %}$releasever/$basearch/"
      gpgcheck: 0
      priority: "{{ repo_priority }}"
  when: pulp_build == "beta" or pulp_build == "stable"

- name: Install yum-plugin-priorities
  package:
    name: yum-plugin-priorities
    state: present
  when: fips_state.stdout == '1'

- name: Install Pulp Server
  package:
    name: '@pulp-server-qpid'
    state: present
  notify:
    - Restart qpidd service
    - Restart Apache service
    - Restart Pulp workers service
    - Restart Pulp celerybeat service
    - Restart Pulp resource manager service

- name: Install Pulp Admin (RPM, Puppet, Docker)
  package:
    name: '@pulp-admin'
    state: present

- name: Install OSTree
  package:
    name:
      - pulp-ostree-plugins
      - pulp-ostree-admin-extensions
    state: present
  when: (ansible_distribution == "RedHat" and ansible_distribution_major_version|int >= 7) or
        (ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 23)

- name: Install Pulp Python plugin
  package:
    name:
      - pulp-python-plugins
      - pulp-python-admin-extensions
    state: present
  notify: Restart Apache service

- name: Configure pulp-admin
  command: "sed -i 's/# verify_ssl: True/verify_ssl: False/g' /etc/pulp/admin/admin.conf"

- name: Generate RSA key pair
  command: pulp-gen-key-pair
  when: pulp_version is version('2.13', '>=')

- name: Generate SSL CA certificate
  command: pulp-gen-ca-certificate
  when: pulp_version is version('2.13', '>=')

- name: Check if Pulp's DB was initialized
  stat:
    path: /var/lib/pulp/db_initialized.flag
  register: db_init

- name: Initialize Pulp's DB
  shell: sudo -u apache pulp-manage-db && touch /var/lib/pulp/db_initialized.flag
  notify:
    - Restart Apache service
    - Restart Pulp workers service
    - Restart Pulp celerybeat service
    - Restart Pulp resource manager service
  when: not db_init.stat.exists

- name: Enable pulp_manage_rsync SELinux boolean
  command: semanage boolean --modify --on pulp_manage_rsync
  when: pulp_version is version('2.10', '>=')

- name: Ensure Apache server is started
  service:
    name: httpd
    state: started
    enabled: true

- name: Ensure Pulp workers are started
  service:
    name: pulp_workers
    state: started
    enabled: true

- name: Ensure Pulp celerybeat is started
  service:
    name: pulp_celerybeat
    state: started
    enabled: true

- name: Ensure Pulp resource manager is started
  service:
    name: pulp_resource_manager
    state: started
    enabled: true
