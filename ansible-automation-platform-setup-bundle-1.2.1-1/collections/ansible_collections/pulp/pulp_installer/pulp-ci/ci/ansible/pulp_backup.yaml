---

- hosts: all
  vars:
    skip_populate: false
  roles:
    - role: subscription-manager
      when: ansible_distribution == 'RedHat'
    - role: pulp
    - role: lazy
      when: pulp_version is version('2.8', '>=')
    - role: pulp-certs
    - role: pulp-crane
    - role: pulp-populate
      when: not skip_populate
    - role: pulp-test-populate
    - role: pulp-backup

# This playbook runs roles to install pulp on a host, then populate it with
# content and back up that content. It is possible to skip population by
# setting "skip_populate" to "true"
#
# Be advised that this play will attempt to create a directory on the control
# node to fetch the backed up files. This behavior can be controlled by setting
# variables on invocation. See details below.
#
# Example invocation:
#
# ansible-playbook -i ~/hosts -l rhel6 pulp_backup.yaml \
#                   -e local_bkup_dir=${HOME}/backups \
#                   -e remote_bkup_dir=/root/backups \
#                   -e rhn_password=my_pass \
#                   -e 'rhn_pool=my_pool' \
#                   -e rhn_username=my_username \
#                   -e pulp_build='stable' \
#                   -e pulp_version=2.11
#
# This would install 2.11 on the rhel6 host in your hosts file, and
# fetch the backups to a directory named "backups" in your home directory.
#
# Variables you might want to specify on invocation:
#
# fetch_to_localhost: [boolean] default: TRUE
#   When true, a directory is created on the control node in which
#   to fetch the backups. If you have troubles with this, you may
#   elect to create the directory in advance and pass:
#   "-e local_bkup_dir='path/to/your/dir'"
#
# local_bkup_dir: [absolute path on control node] default "local_backups"
#   This will create a directory, by default "local_backups" in the
#   directory where the playbook was invoked.
#
# remote_bkup_dir: [absolute path on pulp host] default:
#           "{{ ansible_user_dir }}/remote_backups"
#   This will create a directory on the remote host in which to place the
#   archives before they are fetched. When the files are fetched to the
#   control node, this directory is destroyed.
#
# skip_populate: [boolean] default: FALSE
#   Set this to TRUE if you want to not populate the server with fixture
#   data.
